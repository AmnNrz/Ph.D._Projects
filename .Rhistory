labs(x = "RWC", y = "OLI6/OLI7") +
theme(text = element_text(size = 20))+
coord_flip()
ggplot(dplyr::filter(CAI, Type == "Wheat Duet" | Type == "Pomeroy_top"), aes(x = RWC, y = SINDRI, group = Type, color = Sample)) +
geom_point() +
geom_line(size = 1) +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "RWC", y = "SINDRI") +
theme(axis.text.y = element_blank(), text = element_text(size = 20))
ggplot(dplyr::filter(CAI, Type == "Wheat Duet" | Type == "Pomeroy_top"), aes(x = RWC, y = CAI, group = Type, color = Sample)) +
geom_point() +
geom_line(size = 1) +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "RWC", y = "CAI") +
theme(axis.text.y = element_blank(), text = element_text(size = 20))
ggplot(dplyr::filter(CAI, Type == "Wheat Duet" | Type == "Pomeroy_top"), aes(x = RWC, y = NDTI, group = Type, color = Sample)) +
geom_point() +
geom_line(size = 1) +
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "RWC", y = "NDTI") +
theme(axis.text.y = element_blank(), text = element_text(size = 20))
library(reshape2)
library(dplyr)
library(ggplot2)
##################################################################
##################################################################
##################################################################
########################### AFTER EPO ###########################
##################################################################
##################################################################
##################################################################
path_to_data <- paste0('/Users/aminnorouzi/Library/CloudStorage/',
'OneDrive-WashingtonStateUniversity(email.wsu.edu)/Ph.D/',
'Projects/Soil_Residue_Spectroscopy/Data/10nm_resolution/')
path_to_save <- paste0('/Users/aminnorouzi/Library/CloudStorage/',
'OneDrive-WashingtonStateUniversity(email.wsu.edu)/Ph.D/',
'Projects/Soil_Residue_Spectroscopy/Data/10nm_resolution/',
'index_org_trsfed_crp_sl/')
# path_to_data <- paste0('/home/amnnrz/OneDrive - a.norouzikandelati/Ph.D/',
#                        'Projects/Soil_Residue_Spectroscopy/Data/10nm_resolution/')
#
# path_to_save <- paste0('/home/amnnrz/OneDrive - a.norouzikandelati/Ph.D/',
#                        'Projects/Soil_Residue_Spectroscopy/Data/10nm_resolution/',
#                        'index_org_trsfed_crp_sl/')
CAI <- read.csv(paste0(path_to_data, "CAI_transformed_Combined.csv"))
# desired_colOrder <- c("Sample", "Scan", "Type", "RWC", "X1600", "X1660", "X2000", "X2100", "X2200",
# "X2260", "X2330", "CAI", "SINDRI", "NDTI", "R2220", "R1620", "RSWIR", "ROLI")
# # Reorder the columns
# CAI <- CAI[, desired_colOrder]
crops = unique(CAI[CAI$Sample == "Residue", ]$Type)
soils = unique(CAI[CAI$Sample == "Soil", ]$Type)
fraction_list <- list()
crp <- crops[1]
sl <- soils[1]
for (crp in sort(crops)) {
for (sl in sort(soils)) {
fractions <- runif(20, min = 0, max = 1)
fraction_name = paste0('fraction_', crp,' ', sl)
fraction_list[[fraction_name]] <- fractions
a <- data.frame()
b <- data.frame()
c <- data.frame()
d <- data.frame()
e <- data.frame()
f <- data.frame()
for (i in length(unique(CAI$Scan))) {
a <- dplyr::filter(CAI, Sample == "Soil")
b <- dplyr::filter(CAI, Sample == "Residue")
for (j in unique(a$Type)) {
c <- dplyr::filter(a, Type == j)
d <- merge(c, b, by.x = "Scan", by.y = "Scan")
e <- rbind(e, d)
}
f <- rbind(f, e)
}
test1_NDTI <- f
for (i in fractions){
colname <-  paste0("CAI_", i)
test1_NDTI[[colname]] <- test1_NDTI$NDTI.x * (1 - i) + test1_NDTI$NDTI.y * i
}
test2_NDTI <- dplyr::filter(test1_NDTI, Type.x == sl & Type.y == crp)
test3_NDTI <- test2_NDTI[c(24,42:length(test2_NDTI))] ## select the conven,med,conser colums
test3_NDTI <- reshape2::melt(test3_NDTI, id = "RWC.y")
for (i in fractions){
pattern <- paste0("CAI_", i)
test3_NDTI$variable <- gsub(pattern, i, test3_NDTI$variable)
# test3_NDTI$variable <- as.numeric(test3_NDTI$variable)
}
names(test3_NDTI)[2] <- "Fraction_Residue_Cover"
names(test3_NDTI)[3] <- "CAI"
write.csv(test3_NDTI, paste0(path_to_save, "NDTI_transformed_", crp, "_", gsub("_", " ", sl), ".csv"), row.names = FALSE)
##Fig5
ggplot(test3_NDTI, aes(CAI, Fraction_Residue_Cover, group = factor(RWC.y))) +
geom_line(aes(color = factor(RWC.y))) +
geom_point(aes(shape = factor(RWC.y)))+
labs(y = "Fraction Residue Cover", x = "NDTI") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.2)) +
theme(text = element_text(size = 20),legend.position = c(0.8, 0.2),
legend.title=element_blank(),
legend.margin=margin(c(1,5,5,5)))
##################################################################
##################################################################
##################################################################
a <- data.frame()
b <- data.frame()
c <- data.frame()
d <- data.frame()
e <- data.frame()
f <- data.frame()
for (i in length(unique(CAI$Scan))) {
a <- dplyr::filter(CAI, Sample == "Soil")
b <- dplyr::filter(CAI, Sample == "Residue")
for (j in unique(a$Type)) {
c <- dplyr::filter(a, Type == j)
d <- merge(c, b, by.x = "Scan", by.y = "Scan")
e <- rbind(e, d)
}
f <- rbind(f, e)
}
test1_CAI <- f
for (i in fractions){
colname <-  paste0("CAI_", i)
test1_CAI[[colname]] <- test1_CAI$CAI.x * (1 - i) + test1_CAI$CAI.y * i
}
test2_CAI <- dplyr::filter(test1_CAI, Type.x == sl & Type.y == crp)
test3_CAI <- test2_CAI[c(24,42:length(test2_NDTI))] ## select the conven,med,conser colums
test3_CAI <- reshape2::melt(test3_CAI, id = "RWC.y")
for (i in fractions){
pattern <- paste0("CAI_", i)
test3_CAI$variable <- gsub(pattern, i, test3_CAI$variable)
# test3_CAI$variable <- as.numeric(test3_CAI$variable)
}
names(test3_CAI)[2] <- "Fraction_Residue_Cover"
names(test3_CAI)[3] <- "CAI"
write.csv(test3_CAI, paste0(path_to_save, "CAI_transformed_", crp, "_", gsub("_", " ", sl), ".csv"), row.names = FALSE)
##Fig5
ggplot(test3_CAI, aes(CAI, Fraction_Residue_Cover, group = factor(RWC.y))) +
geom_line(aes(color = factor(RWC.y))) +
geom_point(aes(shape = factor(RWC.y)))+
labs(y = "Fraction Residue Cover", x = "CAI") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.2)) +
theme(text = element_text(size = 20),legend.position = c(0.8, 0.2),
legend.title=element_blank(),
legend.margin=margin(c(1,5,5,5)))
##################################################################
##################################################################
##################################################################
a <- data.frame()
b <- data.frame()
c <- data.frame()
d <- data.frame()
e <- data.frame()
f <- data.frame()
for (i in length(unique(CAI$Scan))) {
a <- dplyr::filter(CAI, Sample == "Soil")
b <- dplyr::filter(CAI, Sample == "Residue")
for (j in unique(a$Type)) {
c <- dplyr::filter(a, Type == j)
d <- merge(c, b, by.x = "Scan", by.y = "Scan")
e <- rbind(e, d)
}
f <- rbind(f, e)
}
test1_SINDRI <- f
for (i in fractions){
colname <-  paste0("CAI_", i)
test1_SINDRI[[colname]] <- test1_SINDRI$SINDRI.x * (1 - i) + test1_SINDRI$SINDRI.y * i
}
test2_SINDRI <- dplyr::filter(test1_SINDRI, Type.x == sl & Type.y == crp)
test3_SINDRI <- test2_SINDRI[c(24,42:length(test2_NDTI))] ## select the conven,med,conser colums
test3_SINDRI <- reshape2::melt(test3_SINDRI, id = "RWC.y")
for (i in fractions){
pattern <- paste0("CAI_", i)
test3_SINDRI$variable <- gsub(pattern, i, test3_SINDRI$variable)
# test3_SINDRI$variable <- as.numeric(test3_SINDRI$variable)
}
names(test3_SINDRI)[2] <- "Fraction_Residue_Cover"
names(test3_SINDRI)[3] <- "CAI"
write.csv(test3_SINDRI, paste0(path_to_save, "SINDRI_transformed_", crp, "_", gsub("_", " ", sl), ".csv"), row.names = FALSE)
##Fig5
ggplot(test3_SINDRI, aes(CAI, Fraction_Residue_Cover, group = factor(RWC.y))) +
geom_line(aes(color = factor(RWC.y))) +
geom_point(aes(shape = factor(RWC.y)))+
labs(y = "Fraction Residue Cover", x = "SINDRI") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.2)) +
theme(text = element_text(size = 20),legend.position = c(0.8, 0.2),
legend.title=element_blank(),
legend.margin=margin(c(1,5,5,5)))
}
}
##################################################################
##################################################################
##################################################################
########################### BEFORE EPO ###########################
##################################################################
##################################################################
##################################################################
CAI <- read.csv(paste0(path_to_data, "CAI_Combined.csv"))
# desired_colOrder <- c("Sample", "Scan", "Type", "RWC", "X1600", "X1660", "X2000", "X2100", "X2200",
#                       "X2260", "X2330", "CAI", "SINDRI", "NDTI", "R2220", "R1620", "RSWIR", "ROLI")
# # Reorder the columns
# CAI <- CAI[, desired_colOrder]
for (crp in sort(crops)) {
for (sl in sort(soils)) {
fractions <- fraction_list[[paste0('fraction_', crp,' ', sl)]]
a <- data.frame()
b <- data.frame()
c <- data.frame()
d <- data.frame()
e <- data.frame()
f <- data.frame()
for (i in length(unique(CAI$Scan))) {
a <- dplyr::filter(CAI, Sample == "Soil")
b <- dplyr::filter(CAI, Sample == "Residue")
for (j in unique(a$Type)) {
c <- dplyr::filter(a, Type == j)
d <- merge(c, b, by.x = "Scan", by.y = "Scan")
e <- rbind(e, d)
}
f <- rbind(f, e)
}
test1_NDTI <- f
for (i in fractions){
colname <-  paste0("CAI_", i)
test1_NDTI[[colname]] <- test1_NDTI$NDTI.x * (1 - i) + test1_NDTI$NDTI.y * i
}
test2_NDTI <- dplyr::filter(test1_NDTI, Type.x == sl & Type.y == crp)
test3_NDTI <- test2_NDTI[c(24,43:length(test2_NDTI))] ## select the conven,med,conser colums
test3_NDTI <- reshape2::melt(test3_NDTI, id = "RWC.y")
for (i in fractions){
pattern <- paste0("CAI_", i)
test3_NDTI$variable <- gsub(pattern, i, test3_NDTI$variable)
# test3_NDTI$variable <- as.numeric(test3_NDTI$variable)
}
names(test3_NDTI)[2] <- "Fraction_Residue_Cover"
names(test3_NDTI)[3] <- "CAI"
write.csv(test3_NDTI, paste0(path_to_save, "NDTI_Original_", crp, "_", gsub("_", " ", sl), ".csv"), row.names = FALSE)
##Fig5
ggplot(test3_NDTI, aes(CAI, Fraction_Residue_Cover, group = factor(RWC.y))) +
geom_line(aes(color = factor(RWC.y))) +
geom_point(aes(shape = factor(RWC.y)))+
labs(y = "Fraction Residue Cover", x = "NDTI") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.2)) +
theme(text = element_text(size = 20),legend.position = c(0.8, 0.2),
legend.title=element_blank(),
legend.margin=margin(c(1,5,5,5)))
##################################################################
##################################################################
##################################################################
a <- data.frame()
b <- data.frame()
c <- data.frame()
d <- data.frame()
e <- data.frame()
f <- data.frame()
for (i in length(unique(CAI$Scan))) {
a <- dplyr::filter(CAI, Sample == "Soil")
b <- dplyr::filter(CAI, Sample == "Residue")
for (j in unique(a$Type)) {
c <- dplyr::filter(a, Type == j)
d <- merge(c, b, by.x = "Scan", by.y = "Scan")
e <- rbind(e, d)
}
f <- rbind(f, e)
}
test1_CAI <- f
for (i in fractions){
colname <-  paste0("CAI_", i)
test1_CAI[[colname]] <- test1_CAI$CAI.x * (1 - i) + test1_CAI$CAI.y * i
}
test2_CAI <- dplyr::filter(test1_CAI, Type.x == sl & Type.y == crp)
test3_CAI <- test2_CAI[c(24,42:length(test2_NDTI))] ## select the conven,med,conser colums
test3_CAI <- reshape2::melt(test3_CAI, id = "RWC.y")
for (i in fractions){
pattern <- paste0("CAI_", i)
test3_CAI$variable <- gsub(pattern, i, test3_CAI$variable)
# test3_CAI$variable <- as.numeric(test3_CAI$variable)
}
names(test3_CAI)[2] <- "Fraction_Residue_Cover"
names(test3_CAI)[3] <- "CAI"
write.csv(test3_CAI, paste0(path_to_save, "CAI_Original_" , crp, "_", gsub("_", " ", sl), ".csv"), row.names = FALSE)
##Fig5
ggplot(test3_CAI, aes(CAI, Fraction_Residue_Cover, group = factor(RWC.y))) +
geom_line(aes(color = factor(RWC.y))) +
geom_point(aes(shape = factor(RWC.y)))+
labs(y = "Fraction Residue Cover", x = "CAI") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.2)) +
theme(text = element_text(size = 20),legend.position = c(0.8, 0.2),
legend.title=element_blank(),
legend.margin=margin(c(1,5,5,5)))
##################################################################
##################################################################
##################################################################
a <- data.frame()
b <- data.frame()
c <- data.frame()
d <- data.frame()
e <- data.frame()
f <- data.frame()
for (i in length(unique(CAI$Scan))) {
a <- dplyr::filter(CAI, Sample == "Soil")
b <- dplyr::filter(CAI, Sample == "Residue")
for (j in unique(a$Type)) {
c <- dplyr::filter(a, Type == j)
d <- merge(c, b, by.x = "Scan", by.y = "Scan")
e <- rbind(e, d)
}
f <- rbind(f, e)
}
test1_SINDRI <- f
for (i in fractions){
colname <-  paste0("CAI_", i)
test1_SINDRI[[colname]] <- test1_SINDRI$SINDRI.x * (1 - i) + test1_SINDRI$SINDRI.y * i
}
test2_SINDRI <- dplyr::filter(test1_SINDRI, Type.x == sl & Type.y == crp)
test3_SINDRI <- test2_SINDRI[c(24,42:length(test2_NDTI))] ## select the conven,med,conser colums
test3_SINDRI <- reshape2::melt(test3_SINDRI, id = "RWC.y")
for (i in fractions){
pattern <- paste0("CAI_", i)
test3_SINDRI$variable <- gsub(pattern, i, test3_SINDRI$variable)
# test3_SINDRI$variable <- as.numeric(test3_SINDRI$variable)
}
names(test3_SINDRI)[2] <- "Fraction_Residue_Cover"
names(test3_SINDRI)[3] <- "CAI"
write.csv(test3_SINDRI, paste0(path_to_save, "SINDRI_Original_", crp, "_", gsub("_", " ", sl),  ".csv"), row.names = FALSE)
##Fig5
ggplot(test3_SINDRI, aes(CAI, Fraction_Residue_Cover, group = factor(RWC.y))) +
geom_line(aes(color = factor(RWC.y))) +
geom_point(aes(shape = factor(RWC.y)))+
labs(y = "Fraction Residue Cover", x = "SINDRI") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.2)) +
theme(text = element_text(size = 20),legend.position = c(0.8, 0.2),
legend.title=element_blank(),
legend.margin=margin(c(1,5,5,5)))
}
}
# Load the reshape2 package
library(reshape2)
library(dplyr)
library(ggplot2)
library(viridis)
library(scales)
# Set the path to directory
# path_to_data <- paste0('/home/amnnrz/OneDrive - a.norouzikandelati/Ph.D/',
#                        'Projects/Soil_Residue_Spectroscopy/Data/',
#                        '10nm_resolution/index_org_trsfed_crp_sl/')
#
# path_to_plots <- paste0('/home/amnnrz/OneDrive - a.norouzikandelati/Ph.D/',
#                         'Projects/Soil_Residue_Spectroscopy/Plots/',
#                         '10nm_resolution/FR_Index_newBands2/')
path_to_data <- paste0('/Users/aminnorouzi/Library/CloudStorage/',
'OneDrive-WashingtonStateUniversity(email.wsu.edu)/Ph.D/',
'Projects/Soil_Residue_Spectroscopy/Data/',
'10nm_resolution/index_org_trsfed_crp_sl/')
path_to_plots <- paste0('/Users/aminnorouzi/Library/CloudStorage/',
'OneDrive-WashingtonStateUniversity(email.wsu.edu)/Ph.D/',
'Projects/Soil_Residue_Spectroscopy/Plots/',
'10nm_resolution/FR_Index_newBands2/')
# Get a list of all .csv files in the directory
csv_files <- list.files(path = path_to_data, pattern = "\\.csv$", full.names = FALSE)
# Remove the ".csv" extension from the file names
csv_files <- sub("\\.csv$", "", csv_files)
# Extract characters after the second underscore
csv_files <- sapply(strsplit(csv_files, "_"), function(x) paste(tail(x, -2), collapse = "_"))
print(unique(csv_files))
##################################################################
##################################################################
##################################################################
########################### AFTER EPO ###########################
##################################################################
##################################################################
##################################################################
for (name in unique(csv_files)) {
NDTI_transformed <- read.csv(paste0(path_to_data, 'NDTI_transformed_',name, '.csv'))
NDTI_original <- read.csv(paste0(path_to_data, 'NDTI_Original_', name, '.csv'))
CAI_transformed <- read.csv(paste0(path_to_data, 'CAI_transformed_', name, '.csv'))
CAI_original <- read.csv(paste0(path_to_data, 'CAI_Original_', name, '.csv'))
SINDRI_transformed <- read.csv(paste0(path_to_data, 'SINDRI_transformed_', name, '.csv'))
SINDRI_original <- read.csv(paste0(path_to_data, 'SINDRI_Original_', name, '.csv'))
##Fig5
ggplot(NDTI_transformed, aes(CAI, Fraction_Residue_Cover, group = factor(RWC.y))) +
geom_line(aes(color = factor(RWC.y))) +
geom_point(aes(shape = factor(RWC.y)))+
labs(y = "Fraction Residue Cover", x = "NDTI") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.2)) +
theme(text = element_text(size = 20),legend.position = c(0.8, 0.2),
legend.title=element_blank(),
legend.margin=margin(c(1,5,5,5)))
##################################################################
##################################################################
##################################################################
##Fig5
ggplot(CAI_transformed, aes(CAI, Fraction_Residue_Cover, group = factor(RWC.y))) +
geom_line(aes(color = factor(RWC.y))) +
geom_point(aes(shape = factor(RWC.y)))+
labs(y = "Fraction Residue Cover", x = "CAI") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.2)) +
theme(text = element_text(size = 20),legend.position = c(0.8, 0.2),
legend.title=element_blank(),
legend.margin=margin(c(1,5,5,5)))
##################################################################
##################################################################
##################################################################
##Fig5
ggplot(SINDRI_transformed, aes(CAI, Fraction_Residue_Cover, group = factor(RWC.y))) +
geom_line(aes(color = factor(RWC.y))) +
geom_point(aes(shape = factor(RWC.y)))+
labs(y = "Fraction Residue Cover", x = "SINDRI") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.2)) +
theme(text = element_text(size = 20),legend.position = c(0.8, 0.2),
legend.title=element_blank(),
legend.margin=margin(c(1,5,5,5)))
##################################################################
##################################################################
##################################################################
########################### BEFORE EPO ###########################
##################################################################
##################################################################
##################################################################
##Fig5
ggplot(NDTI_original, aes(CAI, Fraction_Residue_Cover, group = factor(RWC.y))) +
geom_line(aes(color = factor(RWC.y))) +
geom_point(aes(shape = factor(RWC.y)))+
labs(y = "Fraction Residue Cover", x = "NDTI") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.2)) +
theme(text = element_text(size = 20),legend.position = c(0.8, 0.2),
legend.title=element_blank(),
legend.margin=margin(c(1,5,5,5)))
##################################################################
##################################################################
##################################################################
##Fig5
ggplot(CAI_original, aes(CAI, Fraction_Residue_Cover, group = factor(RWC.y))) +
geom_line(aes(color = factor(RWC.y))) +
geom_point(aes(shape = factor(RWC.y)))+
labs(y = "Fraction Residue Cover", x = "CAI") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.2)) +
theme(text = element_text(size = 20),legend.position = c(0.8, 0.2),
legend.title=element_blank(),
legend.margin=margin(c(1,5,5,5)))
##################################################################
##################################################################
##################################################################
##Fig5
ggplot(SINDRI_original, aes(CAI, Fraction_Residue_Cover, group = factor(RWC.y))) +
geom_line(aes(color = factor(RWC.y))) +
geom_point(aes(shape = factor(RWC.y)))+
labs(y = "Fraction Residue Cover", x = "SINDRI") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.2)) +
theme(text = element_text(size = 20),legend.position = c(0.8, 0.2),
legend.title=element_blank(),
legend.margin=margin(c(1,5,5,5)))
# Combine the datasets
# For NDTI
NDTI_transformed$index <- 'After EPO'
NDTI_transformed$type <- 'NDTI'
NDTI_original$index <- 'Before EPO'
NDTI_original$type <- 'NDTI'
# For CAI
CAI_transformed$index <- 'After EPO'
CAI_transformed$type <- 'CAI'
CAI_original$index <- 'Before EPO'
CAI_original$type <- 'CAI'
# For SINDRI
SINDRI_transformed$index <- 'After EPO'
SINDRI_transformed$type <- 'SINDRI'
SINDRI_original$index <- 'Before EPO'
SINDRI_original$type <- 'SINDRI'
SINDRI_transformed$CAI <- SINDRI_transformed$CAI/100
# Combine all datasets into one
combined_data <- rbind(NDTI_original, NDTI_transformed, CAI_original, CAI_transformed, SINDRI_original, SINDRI_transformed)
# Change the order of levels of 'index'
combined_data$index <- factor(combined_data$index, levels = c('Before EPO', 'After EPO'))
# Get all unique RWC levels from both dataframes
all_rwc_levels <- unique(c(combined_data$RWC.y))
# Create a color palette with enough colors for all RWC levels
custom_colors <- viridis(length(all_rwc_levels))
custom_colors <- rev(custom_colors)
# Plotting
ggplot(combined_data, aes(CAI, Fraction_Residue_Cover, group = factor(RWC.y))) +
geom_line(aes(color = factor(RWC.y))) +
geom_point(aes(shape = factor(RWC.y), color = factor(RWC.y))) +
scale_color_manual(values = custom_colors, name = "RWC Levels") +  # Set legend title here
labs(title = paste0("'", strsplit(name, "_")[[1]][1], "'"," ", "on", " ", "'", strsplit(name, "_")[[1]][2], "'"),
y = "Fraction Residue Cover") +  # Removed the 'shape' title here
xlab("") +  # Set X axis label to an empty string to remove it
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),  # This line centers the title
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),           # Remove major grid lines
panel.grid.minor = element_blank(),           # Remove minor grid lines
strip.background = element_rect(fill = "white"), # Remove facet strip background
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
legend.text = element_text(size = 12),
legend.position = "right",
legend.margin = margin(c(1, 5, 5, 5)),
legend.key.size = unit(0.4, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis text to 45 degrees
) +
facet_wrap(index ~ type,scales = "free")+
guides(
shape = FALSE,  # Remove the shape legend
color = guide_legend(
override.aes = list(shape = 1:length(custom_colors))  # Set the shapes in the legend
)
)
# Save the figure as a PDF with A5 size (width = 14.8 cm, height = 21 cm)
ggsave(paste0(path_to_plots, name, ".png"), width = 22, height = 14.8, units = "cm")
}
